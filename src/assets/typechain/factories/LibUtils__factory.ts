/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibUtils, LibUtilsInterface } from "../LibUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "existingAssetId",
        type: "string",
      },
      {
        internalType: "string",
        name: "newAssetId",
        type: "string",
      },
    ],
    name: "assetIdsCheck",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "assetId",
        type: "string",
      },
    ],
    name: "confirmAssetIdNotSet",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "doubleHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "singleHash",
        type: "bytes",
      },
    ],
    name: "hashCheck",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
    ],
    name: "publicKeyLength",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610785610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063495fe0071461005b5780636d74499f146100775780638899ecf714610093578063a25bb365146100af575b600080fd5b61007560048036038101906100709190610351565b6100cb565b005b610091600480360381019061008c919061043b565b610112565b005b6100ad60048036038101906100a89190610484565b610159565b005b6100c960048036038101906100c49190610532565b6101aa565b005b604081511461010f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610106906105eb565b60405180910390fd5b50565b6000815114610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610657565b60405180910390fd5b50565b61016282610112565b60008151116101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d906106c3565b60405180910390fd5b5050565b808051906020012082146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea9061072f565b60405180910390fd5b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61025e82610215565b810181811067ffffffffffffffff8211171561027d5761027c610226565b5b80604052505050565b60006102906101f7565b905061029c8282610255565b919050565b600067ffffffffffffffff8211156102bc576102bb610226565b5b6102c582610215565b9050602081019050919050565b82818337600083830152505050565b60006102f46102ef846102a1565b610286565b9050828152602081018484840111156103105761030f610210565b5b61031b8482856102d2565b509392505050565b600082601f8301126103385761033761020b565b5b81356103488482602086016102e1565b91505092915050565b60006020828403121561036757610366610201565b5b600082013567ffffffffffffffff81111561038557610384610206565b5b61039184828501610323565b91505092915050565b600067ffffffffffffffff8211156103b5576103b4610226565b5b6103be82610215565b9050602081019050919050565b60006103de6103d98461039a565b610286565b9050828152602081018484840111156103fa576103f9610210565b5b6104058482856102d2565b509392505050565b600082601f8301126104225761042161020b565b5b81356104328482602086016103cb565b91505092915050565b60006020828403121561045157610450610201565b5b600082013567ffffffffffffffff81111561046f5761046e610206565b5b61047b8482850161040d565b91505092915050565b6000806040838503121561049b5761049a610201565b5b600083013567ffffffffffffffff8111156104b9576104b8610206565b5b6104c58582860161040d565b925050602083013567ffffffffffffffff8111156104e6576104e5610206565b5b6104f28582860161040d565b9150509250929050565b6000819050919050565b61050f816104fc565b811461051a57600080fd5b50565b60008135905061052c81610506565b92915050565b6000806040838503121561054957610548610201565b5b60006105578582860161051d565b925050602083013567ffffffffffffffff81111561057857610577610206565b5b61058485828601610323565b9150509250929050565b600082825260208201905092915050565b7f7075626c6963206b6579206d7573742062652036342062797465730000000000600082015250565b60006105d5601b8361058e565b91506105e08261059f565b602082019050919050565b60006020820190508181036000830152610604816105c8565b9050919050565b7f617373657449642068617320616c7265616479206265656e2073657400000000600082015250565b6000610641601c8361058e565b915061064c8261060b565b602082019050919050565b6000602082019050818103600083015261067081610634565b9050919050565b7f61737365744964206d757374206e6f7420686176652030206c656e6774680000600082015250565b60006106ad601e8361058e565b91506106b882610677565b602082019050919050565b600060208201905081810360008301526106dc816106a0565b9050919050565b7f68617368657320646f206e6f74206d6174636800000000000000000000000000600082015250565b600061071960138361058e565b9150610724826106e3565b602082019050919050565b600060208201905081810360008301526107488161070c565b905091905056fea264697066735822122038ab9fef64981d35ceba3e9735b2889f54fb97fdfadf551b3826363bcf0773bb64736f6c634300080d0033";

export class LibUtils__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibUtils> {
    return super.deploy(overrides || {}) as Promise<LibUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibUtils {
    return super.attach(address) as LibUtils;
  }
  connect(signer: Signer): LibUtils__factory {
    return super.connect(signer) as LibUtils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibUtilsInterface {
    return new utils.Interface(_abi) as LibUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibUtils {
    return new Contract(address, _abi, signerOrProvider) as LibUtils;
  }
}
