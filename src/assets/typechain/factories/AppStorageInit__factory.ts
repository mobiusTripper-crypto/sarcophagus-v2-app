/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AppStorageInit,
  AppStorageInitInterface,
} from "../AppStorageInit";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "sarcoToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101cf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063399ae72414610030575b600080fd5b61004a60048036038101906100459190610159565b61004c565b005b60006100566100a9565b9050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010181905550505050565b600090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100de826100b3565b9050919050565b60006100f0826100d3565b9050919050565b610100816100e5565b811461010b57600080fd5b50565b60008135905061011d816100f7565b92915050565b6000819050919050565b61013681610123565b811461014157600080fd5b50565b6000813590506101538161012d565b92915050565b600080604083850312156101705761016f6100ae565b5b600061017e8582860161010e565b925050602061018f85828601610144565b915050925092905056fea26469706673582212209116d21bed7859f60931b4e33173554e7a9c64ea20fa1240501f1cfd27c1e43e64736f6c634300080d0033";

export class AppStorageInit__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AppStorageInit> {
    return super.deploy(overrides || {}) as Promise<AppStorageInit>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AppStorageInit {
    return super.attach(address) as AppStorageInit;
  }
  connect(signer: Signer): AppStorageInit__factory {
    return super.connect(signer) as AppStorageInit__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppStorageInitInterface {
    return new utils.Interface(_abi) as AppStorageInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AppStorageInit {
    return new Contract(address, _abi, signerOrProvider) as AppStorageInit;
  }
}
