/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ViewStateFacet,
  ViewStateFacetInterface,
} from "../ViewStateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistAccusals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistCleanups",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getArchaeologistSuccessOnSarcophagus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistsarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getCursedBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embalmer",
        type: "address",
      },
    ],
    name: "getEmbalmersarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getFreeBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientsarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getSarcophagus",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LibTypes.SarcophagusState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "canBeTransferred",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "minShards",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "resurrectionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxResurrectionInterval",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "arweaveTxIds",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "storageFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "embalmer",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "arweaveArchaeologist",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "archaeologists",
            type: "address[]",
          },
        ],
        internalType: "struct LibTypes.Sarcophagus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getSarcophagusArchaeologist",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bounty",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "doubleHashedShard",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "unencryptedShard",
            type: "bytes",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProtocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061156f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80638ea52bb21161008c578063b7688b7c11610066578063b7688b7c1461025f578063dc231f431461028f578063de116f06146102bf578063f1a03938146102ef576100ce565b80638ea52bb2146101f35780638fbd55d2146102115780639c54563914610241576100ce565b806280357f146100d35780636ba5c8ef146101035780637819551b1461013357806378b4170614610163578063873e31fa1461019357806387927ce6146101c3575b600080fd5b6100ed60048036038101906100e89190610da7565b61031f565b6040516100fa9190610e9c565b60405180910390f35b61011d60048036038101906101189190610eea565b6103b9565b60405161012a9190610f45565b60405180910390f35b61014d60048036038101906101489190610da7565b610423565b60405161015a9190610e9c565b60405180910390f35b61017d60048036038101906101789190610da7565b6104bd565b60405161018a9190610e9c565b60405180910390f35b6101ad60048036038101906101a89190610da7565b610557565b6040516101ba9190610f79565b60405180910390f35b6101dd60048036038101906101d89190610da7565b6105a2565b6040516101ea9190610f79565b60405180910390f35b6101fb6105ed565b6040516102089190610f79565b60405180910390f35b61022b60048036038101906102269190610da7565b6105f9565b6040516102389190610f79565b60405180910390f35b610249610644565b6040516102569190610f79565b60405180910390f35b61027960048036038101906102749190610da7565b610650565b6040516102869190610e9c565b60405180910390f35b6102a960048036038101906102a49190610f94565b6106ea565b6040516102b691906110df565b60405180910390f35b6102d960048036038101906102d49190611101565b610808565b6040516102e691906114b7565b60405180910390f35b61030960048036038101906103049190610da7565b610bc5565b6040516103169190610e9c565b60405180910390f35b60606000600e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103ad57602002820191906000526020600020905b815481526020019060010190808311610399575b50505050509050919050565b60008060060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104b157602002820191906000526020600020905b81548152602001906001019080831161049d575b50505050509050919050565b60606000600c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561054b57602002820191906000526020600020905b815481526020019060010190808311610537575b50505050509050919050565b600080600a0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060010154905090565b60008060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060020154905090565b60606000600d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106de57602002820191906000526020600020905b8154815260200190600101908083116106ca575b50505050509050919050565b6106f2610c5f565b6000601001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461077e90611508565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa90611508565b80156107f75780601f106107cc576101008083540402835291602001916107f7565b820191906000526020600020905b8154815290600101906020018083116107da57829003601f168201915b505050505081525050905092915050565b610810610c8a565b6000600b0160008381526020019081526020016000206040518061018001604052908160008201805461084290611508565b80601f016020809104026020016040519081016040528092919081815260200182805461086e90611508565b80156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660028111156108e9576108e8611183565b5b60028111156108fb576108fa611183565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610a1c57838290600052602060002001805461098f90611508565b80601f01602080910402602001604051908101604052809291908181526020018280546109bb90611508565b8015610a085780601f106109dd57610100808354040283529160200191610a08565b820191906000526020600020905b8154815290600101906020018083116109eb57829003601f168201915b505050505081526020019060010190610970565b505050508152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201805480602002602001604051908101604052809291908181526020018280548015610bb557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b6b575b5050505050815250509050919050565b6060600060080160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c5357602002820191906000526020600020905b815481526020019060010190808311610c3f575b50505050509050919050565b6040518060800160405280600081526020016000815260200160008019168152602001606081525090565b6040518061018001604052806060815260200160006002811115610cb157610cb0611183565b5b8152602001600015158152602001600060ff16815260200160008152602001600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7482610d49565b9050919050565b610d8481610d69565b8114610d8f57600080fd5b50565b600081359050610da181610d7b565b92915050565b600060208284031215610dbd57610dbc610d44565b5b6000610dcb84828501610d92565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610e1381610e00565b82525050565b6000610e258383610e0a565b60208301905092915050565b6000602082019050919050565b6000610e4982610dd4565b610e538185610ddf565b9350610e5e83610df0565b8060005b83811015610e8f578151610e768882610e19565b9750610e8183610e31565b925050600181019050610e62565b5085935050505092915050565b60006020820190508181036000830152610eb68184610e3e565b905092915050565b610ec781610e00565b8114610ed257600080fd5b50565b600081359050610ee481610ebe565b92915050565b60008060408385031215610f0157610f00610d44565b5b6000610f0f85828601610d92565b9250506020610f2085828601610ed5565b9150509250929050565b60008115159050919050565b610f3f81610f2a565b82525050565b6000602082019050610f5a6000830184610f36565b92915050565b6000819050919050565b610f7381610f60565b82525050565b6000602082019050610f8e6000830184610f6a565b92915050565b60008060408385031215610fab57610faa610d44565b5b6000610fb985828601610ed5565b9250506020610fca85828601610d92565b9150509250929050565b610fdd81610f60565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101d578082015181840152602081019050611002565b8381111561102c576000848401525b50505050565b6000601f19601f8301169050919050565b600061104e82610fe3565b6110588185610fee565b9350611068818560208601610fff565b61107181611032565b840191505092915050565b60006080830160008301516110946000860182610fd4565b5060208301516110a76020860182610fd4565b5060408301516110ba6040860182610e0a565b50606083015184820360608601526110d28282611043565b9150508091505092915050565b600060208201905081810360008301526110f9818461107c565b905092915050565b60006020828403121561111757611116610d44565b5b600061112584828501610ed5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006111558261112e565b61115f8185611139565b935061116f818560208601610fff565b61117881611032565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106111c3576111c2611183565b5b50565b60008190506111d4826111b2565b919050565b60006111e4826111c6565b9050919050565b6111f4816111d9565b82525050565b61120381610f2a565b82525050565b600060ff82169050919050565b61121f81611209565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061125d838361114a565b905092915050565b6000602082019050919050565b600061127d82611225565b6112878185611230565b93508360208202850161129985611241565b8060005b858110156112d557848403895281516112b68582611251565b94506112c183611265565b925060208a0199505060018101905061129d565b50829750879550505050505092915050565b6112f081610d69565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061132e83836112e7565b60208301905092915050565b6000602082019050919050565b6000611352826112f6565b61135c8185611301565b935061136783611312565b8060005b8381101561139857815161137f8882611322565b975061138a8361133a565b92505060018101905061136b565b5085935050505092915050565b60006101808301600083015184820360008601526113c3828261114a565b91505060208301516113d860208601826111eb565b5060408301516113eb60408601826111fa565b5060608301516113fe6060860182611216565b5060808301516114116080860182610fd4565b5060a083015161142460a0860182610fd4565b5060c083015184820360c086015261143c8282611272565b91505060e083015161145160e0860182610fd4565b506101008301516114666101008601826112e7565b5061012083015161147b6101208601826112e7565b506101408301516114906101408601826112e7565b506101608301518482036101608601526114aa8282611347565b9150508091505092915050565b600060208201905081810360008301526114d181846113a5565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061152057607f821691505b602082108103611533576115326114d9565b5b5091905056fea26469706673582212203eacc0bf77f403d09f3483995419c90161c8dde66aa79d334934849dc9a677b564736f6c634300080d0033";

export class ViewStateFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ViewStateFacet> {
    return super.deploy(overrides || {}) as Promise<ViewStateFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ViewStateFacet {
    return super.attach(address) as ViewStateFacet;
  }
  connect(signer: Signer): ViewStateFacet__factory {
    return super.connect(signer) as ViewStateFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ViewStateFacetInterface {
    return new utils.Interface(_abi) as ViewStateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViewStateFacet {
    return new Contract(address, _abi, signerOrProvider) as ViewStateFacet;
  }
}
